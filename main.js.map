{"version":3,"sources":["./src/app/services/friends-mgmt.service.ts","./src/app/components/add/add.component.ts","./src/app/components/add/add.component.html","./src/app/components/linkup/linkup.component.ts","./src/app/components/linkup/linkup.component.html","./src/app/components/common/common.component.ts","./src/app/components/common/common.component.html","./src/environments/environment.ts","./src/app/components/listing/listing.component.ts","./src/app/components/listing/listing.component.html","./src/app/components/updates/updates.component.ts","./src/app/components/updates/updates.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/posting/posting.component.ts","./src/app/components/posting/posting.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst baseUrl = 'http://localhost:3000/user';\nconst baseUrlPost = 'http://localhost:3000/post';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FriendService {\n  constructor(private http: HttpClient) {}\n\n  linking(data): Observable<any> {\n    return this.http.put(`${baseUrl}/link-up`, data);\n  }\n\n  getAllFriends(email): Observable<any> {\n    return this.http.get(`${baseUrl}/friends-list/${email}`);\n  }\n\n  getUpdateFriends(email): Observable<any> {\n    return this.http.get(`${baseUrl}/friends-update-list/${email}`);\n  }\n\n  blockFriend(data): Observable<any> {\n    return this.http.put(`${baseUrl}/block-friend`, data);\n  }\n\n  unblockFriend(data): Observable<any> {\n    return this.http.put(`${baseUrl}/unblock-friend`, data);\n  }\n\n  subscribeUpdate(data): Observable<any> {\n    return this.http.put(`${baseUrl}/subscribe-update`, data);\n  }\n\n  unsubscribeUpdate(data): Observable<any> {\n    return this.http.put(`${baseUrl}/unsubscribe-update`, data);\n  }\n\n  getCommonFriends(data): Observable<any> {\n    return this.http.post(`${baseUrl}/common-friends`, data);\n  }\n\n  postUpdates(data): Observable<any> {\n    return this.http.post(`${baseUrlPost}/update`, data);\n  }\n\n  addUser(data): Observable<any> {\n    return this.http.post(`${baseUrl}/add-user`, data);\n  }\n\n  unfriend(data): Observable<any> {\n    return this.http.put(`${baseUrl}/unfriend`, data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { FriendService } from 'src/app/services/friends-mgmt.service';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss'],\n})\nexport class AddComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  message = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private friendService: FriendService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  addUserForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    email: ['', Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.message = '';\n  }\n\n  onSubmitAddForm() {\n    console.log(this.addUserForm.value);\n    this.friendService.addUser(this.addUserForm.value).subscribe((res) => {\n      if (res.message) {\n        this.message = res.message;\n        this.openSnackBar(res.message);\n      }\n    });\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n  <form [formGroup]=\"addUserForm\">\n    <mat-card-header>\n      <mat-card-title>Add User</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label>Name </mat-label>\n        <input matInput name formControlName=\"name\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput email formControlName=\"email\" required />\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button type=\"reset\" color=\"warn\">Reset</button>\n      <button\n        mat-raised-button\n        type=\"submit\"\n        color=\"primary\"\n        (click)=\"onSubmitAddForm()\"\n      >\n        Add User\n      </button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { FriendService } from 'src/app/services/friends-mgmt.service';\n\n@Component({\n  selector: 'app-linkup',\n  templateUrl: './linkup.component.html',\n  styleUrls: ['./linkup.component.scss'],\n})\nexport class LinkupComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  message = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private friendService: FriendService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  linkUpForm = this.formBuilder.group({\n    email: ['', Validators.required],\n    friendEmail: ['', Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.message = '';\n  }\n\n  onSubmitLinkUpForm() {\n    console.log(this.linkUpForm.value);\n    this.friendService.linking(this.linkUpForm.value).subscribe((res) => {\n      if (res.message) {\n        this.message = res.message;\n        this.openSnackBar(res.message);\n      }\n    });\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n  <form [formGroup]=\"linkUpForm\">\n    <mat-card-header>\n      <mat-card-title>Link Up Friends</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label>My Email</mat-label>\n        <input matInput email formControlName=\"email\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Friend's Email</mat-label>\n        <input matInput friendEmail formControlName=\"friendEmail\" required />\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button type=\"reset\" color=\"warn\">Reset</button>\n      <button\n        mat-raised-button\n        type=\"submit\"\n        color=\"primary\"\n        (click)=\"onSubmitLinkUpForm()\"\n      >\n        Link Up\n      </button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { FriendService } from 'src/app/services/friends-mgmt.service';\n\nexport interface UserData {\n  email: string;\n}\n\n@Component({\n  selector: 'app-common',\n  templateUrl: './common.component.html',\n  styleUrls: ['./common.component.scss'],\n})\nexport class CommonComponent implements OnInit {\n  displayedColumns: string[] = ['email'];\n  dataSource: MatTableDataSource<UserData>;\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private friendService: FriendService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  commonFriendsForm = this.formBuilder.group({\n    email: ['', Validators.required],\n    friendEmail: ['', Validators.required],\n  });\n\n  ngOnInit(): void {}\n\n  onSubmitForm() {\n    console.log(this.commonFriendsForm.value);\n    this.friendService\n      .getCommonFriends(this.commonFriendsForm.value)\n      .subscribe((res) => {\n        if (res.status == 'error') {\n          this.openSnackBar(res.message);\n        }\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res.data);\n        console.log(this.dataSource);\n      });\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, 'close', {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n  <form [formGroup]=\"commonFriendsForm\">\n    <mat-card-header>\n      <mat-card-title>Common Friends</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label> My Email </mat-label>\n        <input matInput email formControlName=\"email\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label> Friend's Email </mat-label>\n        <input matInput email formControlName=\"friendEmail\" required />\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button type=\"reset\" color=\"warn\">Reset</button>\n      <button\n        mat-raised-button\n        type=\"submit\"\n        color=\"primary\"\n        (click)=\"onSubmitForm()\"\n      >\n        Common Friends\n      </button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n\n<div class=\"mat-elevation-z8\" *ngIf=\"dataSource != null\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>In Common</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.email }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { FriendService } from 'src/app/services/friends-mgmt.service';\n\nexport interface UserData {\n  email: string;\n}\n\n@Component({\n  selector: 'app-listing',\n  templateUrl: './listing.component.html',\n  styleUrls: ['./listing.component.scss'],\n})\nexport class ListingComponent implements OnInit {\n  displayedColumns: string[];\n  dataSource: MatTableDataSource<UserData>;\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private friendService: FriendService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  friendListForm = this.formBuilder.group({\n    email: ['', Validators.required],\n  });\n\n  ngOnInit(): void {}\n\n  onClickAllFriends() {\n    this.displayedColumns = ['email', 'action'];\n    console.log(this.friendListForm.value.email);\n    this.friendService\n      .getAllFriends(this.friendListForm.value.email)\n      .subscribe((res) => {\n        if (res.status == 'error') {\n          this.openSnackBar(res.message);\n        }\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res.result);\n        console.log(this.dataSource);\n      });\n  }\n\n  onClickSubscribe(e) {\n    let data = {\n      email: this.friendListForm.value.email,\n      friendEmail: e,\n    };\n    this.friendService.subscribeUpdate(data).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n      this.onClickAllFriends();\n    });\n  }\n\n  onClickUnSubscribe(e) {\n    let data = {\n      email: this.friendListForm.value.email,\n      friendEmail: e,\n    };\n    this.friendService.unsubscribeUpdate(data).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n      this.onClickAllFriends;\n    });\n  }\n\n  onClickBlock(e) {\n    let data = {\n      email: this.friendListForm.value.email,\n      friendEmail: e,\n    };\n    this.friendService.blockFriend(data).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n      this.onClickAllFriends();\n    });\n  }\n\n  onClickUnBlock(e) {\n    let data = {\n      email: this.friendListForm.value.email,\n      friendEmail: e,\n    };\n    this.friendService.unblockFriend(data).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n      this.onClickAllFriends();\n    });\n  }\n\n  onClickUnFriend(e) {\n    let data = {\n      email: this.friendListForm.value.email,\n      friendEmail: e,\n    };\n    this.friendService.unfriend(data).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n      this.onClickAllFriends();\n    });\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, 'Click', {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n  <form [formGroup]=\"friendListForm\">\n    <mat-card-header>\n      <mat-card-title>Friends List</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label> My Email </mat-label>\n        <input matInput email formControlName=\"email\" required />\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button type=\"reset\" color=\"warn\">Reset</button>\n      <button mat-raised-button color=\"primary\" (click)=\"onClickAllFriends()\">\n        Friends\n      </button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n\n<div class=\"mat-elevation-z8\" *ngIf=\"dataSource != null\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>My Friends</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.email }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"action\" class=\"action-column\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button\n          *ngIf=\"row.isSubscribe == false\"\n          mat-raised-button\n          color=\"primary\"\n          (click)=\"onClickSubscribe(row.email)\"\n        >\n          Subscribe\n        </button>\n        <button\n          *ngIf=\"row.isSubscribe == true\"\n          mat-raised-button\n          color=\"warn\"\n          (click)=\"onClickUnSubscribe(row.email)\"\n        >\n          UnSubscribe\n        </button>\n        <button\n          *ngIf=\"row.isBlock == false\"\n          mat-raised-button\n          color=\"warn\"\n          (click)=\"onClickBlock(row.email)\"\n        >\n          Block\n        </button>\n        <button\n          *ngIf=\"row.isBlock == true\"\n          mat-raised-button\n          color=\"primary\"\n          (click)=\"onClickUnBlock(row.email)\"\n        >\n          UnBlock\n        </button>\n        <button\n          mat-raised-button\n          color=\"warn\"\n          (click)=\"onClickUnFriend(row.email)\"\n        >\n          UnFriend\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { FriendService } from 'src/app/services/friends-mgmt.service';\n\nexport interface UserData {\n  email: string;\n}\n\n@Component({\n  selector: 'app-updates',\n  templateUrl: './updates.component.html',\n  styleUrls: ['./updates.component.scss'],\n})\nexport class UpdatesComponent implements OnInit {\n  displayedColumns: string[];\n  dataSource: MatTableDataSource<UserData>;\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private friendService: FriendService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  friendListWithUpdatesForm = this.formBuilder.group({\n    email: ['', Validators.required],\n  });\n\n  ngOnInit(): void {}\n\n  onClickFriendUpdates() {\n    this.displayedColumns = ['email', 'action'];\n    console.log(this.friendListWithUpdatesForm.value);\n    this.friendService\n      .getUpdateFriends(this.friendListWithUpdatesForm.value.email)\n      .subscribe((res) => {\n        if (res.status == 'error') {\n          this.openSnackBar(res.message);\n        }\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res.result);\n        console.log(this.dataSource);\n      });\n  }\n\n  onClickUnSubscribe(e) {\n    let data = {\n      email: this.friendListWithUpdatesForm.value.email,\n      friendEmail: e,\n    };\n    this.friendService.unsubscribeUpdate(data).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n      this.onClickFriendUpdates();\n    });\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n  <form [formGroup]=\"friendListWithUpdatesForm\">\n    <mat-card-header>\n      <mat-card-title>Friends List With Updates</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label> My Email </mat-label>\n        <input matInput email formControlName=\"email\" required />\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button type=\"reset\" color=\"warn\">Reset</button>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"onClickFriendUpdates()\"\n      >\n        List Friends with Updates\n      </button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n\n<div class=\"mat-elevation-z8\" *ngIf=\"dataSource != null\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>My Friends</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.email }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button\n          *ngIf=\"row.isSubscribe == true\"\n          mat-raised-button\n          color=\"warn\"\n          (click)=\"onClickUnSubscribe(row.email)\"\n        >\n          UnSubscribe\n        </button>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'friends-mgmt-app';\n}\n","<mat-toolbar color=\"accent\"\n  ><span>Friends Management Application</span></mat-toolbar\n>\n<section>\n  <div class=\"example-button-row\">\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      routerLink=\"/add\"\n      routerLinkActive=\"mat-link-active\"\n    >\n      Add User\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      routerLink=\"/common\"\n      routerLinkActive=\"mat-link-active\"\n    >\n      Common\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      routerLink=\"/linkup\"\n      routerLinkActive=\"mat-link-active\"\n    >\n      Link Up\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      routerLink=\"/listing\"\n      routerLinkActive=\"mat-link-active\"\n    >\n      Listing\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      routerLink=\"/posting\"\n      routerLinkActive=\"mat-link-active\"\n    >\n      Post\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      routerLink=\"/updates\"\n      routerLinkActive=\"mat-link-active\"\n    >\n      Updates\n    </button>\n  </div>\n</section>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { FriendService } from 'src/app/services/friends-mgmt.service';\n\n@Component({\n  selector: 'app-posting',\n  templateUrl: './posting.component.html',\n  styleUrls: ['./posting.component.scss'],\n})\nexport class PostingComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private friendService: FriendService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  updateForm = this.formBuilder.group({\n    email: ['', Validators.required],\n    friendEmail: ['', Validators.required],\n    text: ['', Validators.required],\n  });\n\n  ngOnInit(): void {}\n\n  onSubmitPost() {\n    console.log(this.updateForm.value);\n    this.friendService.postUpdates(this.updateForm.value).subscribe((res) => {\n      if (res.message) {\n        this.openSnackBar(res.message);\n      }\n    });\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 1000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<mat-card class=\"example-card\">\n  <form [formGroup]=\"updateForm\">\n    <mat-card-header>\n      <mat-card-title>Post Updates</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label> My Email </mat-label>\n        <input matInput email formControlName=\"email\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label> Friend's Email </mat-label>\n        <input matInput email formControlName=\"friendEmail\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label> Post Content </mat-label>\n        <textarea matInput formControlName=\"text\" required></textarea>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button type=\"reset\" color=\"warn\">Reset</button>\n      <button\n        mat-raised-button\n        type=\"submit\"\n        color=\"primary\"\n        (click)=\"onSubmitPost()\"\n      >\n        Post Update\n      </button>\n    </mat-card-actions>\n  </form>\n</mat-card>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AddComponent } from './components/add/add.component';\nimport { CommonComponent } from './components/common/common.component';\nimport { LinkupComponent } from './components/linkup/linkup.component';\nimport { ListingComponent } from './components/listing/listing.component';\nimport { PostingComponent } from './components/posting/posting.component';\nimport { UpdatesComponent } from './components/updates/updates.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddComponent,\n    CommonComponent,\n    LinkupComponent,\n    ListingComponent,\n    PostingComponent,\n    UpdatesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nconst Mat = [\n  MatCheckboxModule,\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [Mat],\n  exports: [Mat],\n})\nexport class MaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\n\nimport { AddComponent } from './components/add/add.component';\nimport { CommonComponent } from './components/common/common.component';\nimport { LinkupComponent } from './components/linkup/linkup.component';\nimport { ListingComponent } from './components/listing/listing.component';\nimport { PostingComponent } from './components/posting/posting.component';\nimport { UpdatesComponent } from './components/updates/updates.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/add', pathMatch: 'full' },\n  { path: 'add', component: AddComponent },\n  { path: 'common', component: CommonComponent },\n  { path: 'linkup', component: LinkupComponent },\n  { path: 'listing', component: ListingComponent },\n  { path: 'posting', component: PostingComponent },\n  { path: 'updates', component: UpdatesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}